version: '3.8'

services:
  webserver:
    platform: linux/arm64
    container_name: oppia-webserver
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - shared_root_dir:/app/oppia
    environment:
      - production=false
      - NODE_ENV=development
    # command: >
    #   sh -c '/app/oppia/wait-for-it.sh --folder=/app/oppia/webpack_bundles && trap "rm ./node_modules/@angular/compiler-cli/ngcc/__ngcc_lock_file__" EXIT && ./node_modules/.bin/ng build --watch'
    healthcheck:
      # TODO: Add a variable for the folder name inside the dist as per the prod_env flag is passed or not.
      test: bash -f /app/oppia/dist/oppia-angular/index.html || sleep 25
      timeout: 30s
      interval: 30s
      retries: 5
      start_period: 30s
    command: >
      sh -c 'trap "rm ./node_modules/@angular/compiler-cli/ngcc/__ngcc_lock_file__" EXIT; ./node_modules/.bin/ng build --watch'

  webpack-compiler:
    platform: linux/arm64
    container_name: oppia-webpack-compiler
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - shared_root_dir:/app/oppia
    depends_on:
      webserver:
        condition: service_healthy
    healthcheck:
      test: bash -f /app/oppia/webpack_bundles/0.bundle.js || sleep 25
      timeout: 30s
      interval: 30s
      retries: 5
      start_period: 30s
    command: node ./node_modules/webpack/bin/webpack.js --config ./webpack.dev.config.ts --watch

  google_app_engine:
    build: 
      context: .
      dockerfile: Dockerfile.google_cloud_sdk
    container_name: oppia-app-engine
    ports:
      - "8181:8181"
      - "8000:8000"
    volumes:
      - shared_root_dir:/app/oppia
    depends_on:
      webserver:
        condition: service_healthy
      webpack-compiler:
        condition: service_healthy
      datastore:
        condition: service_healthy
      firebase:
        condition: service_healthy
      redis:  
        condition: service_healthy
      elasticsearch:  
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8181/ || exit 1
      timeout: 10s
      interval: 30s
      retries: 5
      start_period: 5m
    # command: /google-cloud-sdk/bin/dev_appserver.py --runtime python38 --host=0.0.0.0 --port=8181 --log_level=info --admin_host=0.0.0.0 --admin_port=8000 --dev_appserver_log_level=info --skip_sdk_update_check=True --enable_host_checking=False --automatic_restart=True /app/oppia/app_dev.yaml
    command: /google-cloud-sdk/bin/dev_appserver.py /app/oppia/app_dev.yaml --runtime python38 --host=0.0.0.0 --port=8181
  
  datastore:
    build:
      context: .
      dockerfile: Dockerfile.google_cloud_sdk
    container_name: oppia-cloud-datastore
    ports:
      - "8089:8089"
    volumes:
      - shared_root_dir:/app/oppia
    depends_on:
      webserver:
        condition: service_healthy
      webpack-compiler:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8089/ || exit 1
      timeout: 10s
      interval: 1m
      retries: 5
    command: /google-cloud-sdk/platform/cloud-datastore-emulator/cloud_datastore_emulator start --host=0.0.0.0 --port=8089 --store_on_disk=False --consistency=1.0 /app/cloud_datastore_emulator_cache

  firebase:
    image: node:16.13.0-alpine
    container_name: oppia-firebase-emulator
    ports:
      - "9099:9099"
      - "4000:4000"
    volumes:
      - shared_root_dir:/app/oppia
    healthcheck:
      test: wget --spider http://localhost:4000/auth/ || exit 1
      timeout: 10s
      interval: 30s
      retries: 5
    command: /app/oppia/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --only auth --project dev-project-id --config /app/oppia/.firebase.json --import /app/firebase_emulator_cache --export-on-exit /app/firebase_emulator_cache

  redis:
    image: redis:7.0-alpine
    container_name: oppia-redis
    ports:
      - "6379:6379"
    environment:
      - PATH=/usr/local/bin/
    healthcheck:
      test: redis-cli ping
      timeout: 5s
      interval: 30s
      retries: 5
    volumes:
      - shared_root_dir:/app/oppia
    command: redis-server --bind 0.0.0.0 --port 6379 --save "60 1" --tcp-keepalive 300 --dbfilename dump.rdb --dir /app/oppia/ --rdbcompression yes

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: oppia-elasticsearch
    ports:
      - "9200:9200"
    volumes:
      - shared_root_dir:/app/oppia
    environment:
      - ES_JAVA_OPTS=-Xms100m -Xmx500m
      - ES_PATH_CONF=/usr/share/elasticsearch/config
      - discovery.type=single-node
    depends_on:
      datastore:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:9200/ || exit 1
      timeout: 10s
      interval: 1m
      retries: 5
    command: elasticsearch -q

volumes:
  shared_root_dir:
